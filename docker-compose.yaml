networks:
  default:
    external:
      name: roboshop
volumes:
  mongodb: # docker volume create mongodb
  redis:
  rabbitmq:
  mysql:
services:

  mongodb:
    image: mongodb:1.0.0
    container_name: mongodb
    # volumes:
    #   - source: mongodb
    #     target: /data/db
    #     type: volume
    # networks:
    # - roboshop

  catalogue:
    image: catalogue:1.0.0
    container_name: catalogue
    # networks:
    # - roboshop
    depends_on:
    - mongodb

  web:
    image: web:1.0.0
    container_name: web
    # networks:
    # - roboshop
    ports:
    - "80:80"
    depends_on:
      - catalogue

  redis:
    image: redis
    container_name: redis
    # volumes:
    # - source: redis
    #   target: /data
    #   type: volume

  user:
    image: user:1.0.0
    container_name: user
    depends_on:
      - redis
      - mongodb

  cart:
    image: cart:1.0.0
    container_name: cart
    depends_on:
      - catalogue
      - redis

  mysql:
    image: mysql:1.0.0
    container_name: mysql
  # volumes:
  # - source: mysql
  #   target: /var/lib/mysql
  #   type: volume
  
  shipping:
    image: shipping:1.0.0
    container_name: shipping
    depends_on:
    - mysql
  
  
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:1.0.0
    environment:
    - RABBITMQ_DEFAULT_USER=roboshop
    - RABBITMQ_DEFAULT_PASS=roboshop123
    # volumes:
    # - source: rabbitmq
    #   target: /var/lib/rabbitmq
    #   type: volume

  payment:
    container_name: payment
    image: payment:1.0.0
    depends_on:
    - rabbitmq
    - user
    - cart
